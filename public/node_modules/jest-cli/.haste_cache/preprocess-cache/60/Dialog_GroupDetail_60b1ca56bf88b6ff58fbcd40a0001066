// React, react-reouter, alt
var React = require('react');
var render = require('react-dom').render;
var Router = require('react-router');
var StudyGroupStore = require('../stores/StudyGroupStore');
 
var Dialog_EditGroup = require('./Dialog_EditGroup.jsx');
var Comments = require('./Comments.jsx');

// Matertial UI components
const TextField = require('material-ui/lib/text-field');
const Dialog = require('material-ui/lib/dialog');
const FlatButton = require('material-ui/lib/flat-button');
const Paper = require('material-ui/lib/paper');

const moment = require('moment');

var GroupDetailDialog = React.createClass({displayName: "GroupDetailDialog",
	openEditGroupDialog:function() {
		this.refs.groupDetailDialog.dismiss();
		this.refs.editGroupDialog.refs.editGroupDialog.show();
	},

	getTimeString:function(time) {
		var d = new Date(0);
		d.setUTCSeconds(Number(time));
		return moment(d).format("h:mm a").toString();
	},

	getDateString:function(date) {
		var d = new Date(0);
		d.setUTCSeconds(Number(date));
		return moment(d).format("ddd, MMM D").toString();
	},

	render:function() {
		var studyGroup = this.props.studyGroup;
		var user = this.props.user;

		var date = this.getDateString(studyGroup.date);
		var time = this.getTimeString(studyGroup.date);
		if(!this.props.studyGroup) {
			return (React.createElement("div", null));
		}
		if (user.nickname === studyGroup.host) {
			return (
				React.createElement("div", null, 
					React.createElement(Dialog_EditGroup, {ref: "editGroupDialog", studyGroup: studyGroup}), 

					React.createElement(Dialog, {ref: "groupDetailDialog", 
							title: "StudyGroup Detail", 
							style: {textAlign:"center", color:"#0D47A1 !important"}, 
							actions: [], 
					  		autoDetectWindowHeight: true, 
					  		autoScrollBodyContent: true}, 
					    React.createElement(Paper, {zDepth: 2, 
					    style: {padding:"30px"}}, 
					    	React.createElement("div", {className: "groupdesc-title"}, "Class"), 
					    	React.createElement("div", {ref: "groupdetailClass", className: "groupdesc-subtitle"}, studyGroup.subject), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Title"), 
					    	React.createElement("div", {ref: "groupdetailTitle", className: "groupdesc-subtitle"}, studyGroup.title), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Host"), 
					    	React.createElement("div", {ref: "groupdetailHost", className: "groupdesc-subtitle"}, studyGroup.host), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Date"), 
					    	React.createElement("div", {ref: "groupdetailDate", className: "groupdesc-subtitle"}, date), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Time"), 
					    	React.createElement("div", {ref: "groupdetailTime", className: "groupdesc-subtitle"}, time), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Location"), 
					    	React.createElement("div", {ref: "groupdetailLocation", className: "groupdesc-subtitle"}, studyGroup.location), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Description"), 
					    	React.createElement("div", {ref: "groupdetailDescription", className: "groupdesc-subtitle"}, studyGroup.description), 

					    	React.createElement(FlatButton, {label: "Edit", onClick: this.openEditGroupDialog, disabled: this.props.disabled})

					    ), 
					    React.createElement(Comments, {studyGroup: studyGroup})
					)
				)
			);
		} else {
			return (
				React.createElement("div", null, 
					React.createElement(Dialog, {ref: "groupDetailDialog", 
							title: "StudyGroup Detail", 
							style: {textAlign:"center", color:"#0D47A1 !important"}, 
							actions: [], 
					  		autoDetectWindowHeight: true, 
					  		autoScrollBodyContent: true}, 
					    React.createElement(Paper, {zDepth: 2, 
					    style: {padding:"30px"}}, 
					    	React.createElement("div", {className: "groupdesc-title"}, "Class"), 
					    	React.createElement("div", {ref: "groupdetailClass", className: "groupdesc-subtitle"}, studyGroup.subject), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Title"), 
					    	React.createElement("div", {ref: "groupdetailTitle", className: "groupdesc-subtitle"}, studyGroup.title), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Host"), 
					    	React.createElement("div", {ref: "groupdetailHost", className: "groupdesc-subtitle"}, studyGroup.host), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Date"), 
					    	React.createElement("div", {ref: "groupdetailDate", className: "groupdesc-subtitle"}, date), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Time"), 
					    	React.createElement("div", {ref: "groupdetailTime", className: "groupdesc-subtitle"}, time), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Location"), 
					    	React.createElement("div", {ref: "groupdetailLocation", className: "groupdesc-subtitle"}, studyGroup.location), 

					    	React.createElement("div", {className: "groupdesc-title"}, "Description"), 
					    	React.createElement("div", {ref: "groupdetailDescription", className: "groupdesc-subtitle"}, studyGroup.description)
					    ), 
					    React.createElement(Comments, {studyGroup: studyGroup})
					)
				)
			)
		}
	}
})


module.exports = GroupDetailDialog;